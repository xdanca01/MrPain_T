#1.c)
data$CentralAir <- factor(data$CentralAir)
data$CentralAir <- gsub("Y","Yes",data$CentralAir)
data$CentralAir <- gsub("N","No",data$CentralAir)
table(data$CentralAir)
data <- subset(data, select = -LotShape)
for(name in colnames(data)){
num = length(data[name[1]][is.na(data[name[1]])])
if(num > 0){
print(paste("Column", name[1], "has", num, "of missing values"))
}
}
help(mean)
mean(data$Id)
my_mean(data$Id)
#2.a)
my_mean <- function(x){
return(sum(x)/length(x))
}
my_median <- function(x){
x <- sort(x)
n <- round(length(x))
return(x[n])
}
my_mean(data$Id)
my_mean(data$Id)
mean(data$Id)
my_mean(data$Id)
median(data$Id)
my_median(data$Id)
median(data$Id)
my_median(data$Id)
my_median <- function(x){
x <- sort(x)
n <- length(x)
return(x[n])
}
median(data$Id)
my_median(data$Id)
my_median <- function(x){
x <- sort(x)
n <- round(length(x)/2)
return(x[n])
}
median(data$Id)
my_median(data$Id)
l <- vector(1:10)
l <- 1:10
median(l)
my_median(l)
median(l)
my_median(l)
View(l)
my_median <- function(x){
x <- sort(x)
n <- length(x)/2
if(n == round(n)) return(x[n])
return(x[(n-0.5]+x[n+0.5])/2)
}
my_median <- function(x){
x <- sort(x)
n <- length(x)/2
if(n == round(n)) return(x[n])
return((x[n-0.5]+x[n+0.5])/2)
}
median(l)
my_median(l)
my_median <- function(x){
x <- sort(x)
n <- length(x)/2
print(n)
if(n == round(n)) return(x[n])
return((x[n-0.5]+x[n+0.5])/2)
}
median(l)
my_median(l)
my_median <- function(x){
x <- sort(x)
n <- length(x)/2
print(n)
if(is.odd(n) == FALSE) return(x[round(n)])
return((x[n-0.5]+x[n+0.5])/2)
}
median(l)
my_median(l)
my_median <- function(x){
x <- sort(x)
n <- length(x)/2
print(n)
if(n != round(n)) return(x[round(n)])
return((x[n-0.5]+x[n+0.5])/2)
}
median(l)
my_median(l)
my_median <- function(x){
x <- sort(x)
n <- length(x)/2
print(n)
if(n != round(n)) return(x[round(n)])
return((x[n]+x[n+1])/2)
}
median(l)
my_median(l)
my_median <- function(x){
x <- sort(x)
n <- length(x)/2
if(n != round(n)) return(x[round(n)])
return((x[n]+x[n+1])/2)
}
median(l)
my_median(l)
mean(data$Id)
my_mean(data$Id)
median(data$Id)
my_median(data$Id)
quantile(data$Id, type=1)
help("quantile")
my_quantile <- function(x){
x <- sort(x)
c.append(1)
return(c)
}
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
c <- 1
c.append(1)
return(c)
}
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
c <- 1
append(c, 1)
return(c)
}
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
c <- 2
append(c, 1)
return(c)
}
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
c <- my_median(x[1:(n/4)])
return(c)
}
my_quantile(data$Id)
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
c <- my_median(x[1:(n/2)])
return(c)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
c <- my_median(x[1:round(n/2)])
tmp <- my_median(x)
append(c, tmp)
tmp <- my_median(x[round(n/2):n])
append(c, tmp)
return(c)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
tmp1 <- my_median(x[1:round(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[round(n/2):n])
c <- (tmp1, tmp2, tmp3)
return(c)
}
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
tmp1 <- my_median(x[1:round(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[round(n/2):n])
c <- vector(tmp1, tmp2, tmp3)
return(c)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
tmp1 <- my_median(x[1:round(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[round(n/2):n])
my_vec <- c(tmp1, tmp2, tmp3)
return(my_vec)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
tmp1 <- my_median(x[1:n/2])
tmp2 <- my_median(x)
tmp3 <- my_median(x[round(n/2):n])
my_vec <- c(tmp1, tmp2, tmp3)
return(my_vec)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
tmp1 <- my_median(x[1:n/2])
tmp2 <- my_median(x)
tmp3 <- my_median(x[n/2:n])
my_vec <- c(tmp1, tmp2, tmp3)
return(my_vec)
}
mean(data$Id)
my_mean(data$Id)
median(data$Id)
my_median(data$Id)
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
tmp1 <- my_median(x[1:n/2])
tmp2 <- my_median(x)
tmp3 <- my_median(x[(n/2):n])
my_vec <- c(tmp1, tmp2, tmp3)
return(my_vec)
}
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
tmp1 <- my_median(x[1:(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[(n/2):n])
my_vec <- c(tmp1, tmp2, tmp3)
return(my_vec)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
tmp1 <- my_median(x[1:(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[(n/2+1):n])
tmp4 <-
my_vec <- c(tmp1, tmp2, tmp3)
return(my_vec)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
tmp1 <- my_median(x[1:(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[(n/2+2):n])
tmp4 <-
my_vec <- c(tmp1, tmp2, tmp3)
return(my_vec)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
tmp1 <- my_median(x[1:(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[(n/2):n])
tmp4 <- x[n]
my_vec <- c(tmp1, tmp2, tmp3)
return(my_vec)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
tmp1 <- my_median(x[1:(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[(n/2):n])
tmp4 <- x[n]
my_vec <- c(tmp1, tmp2, tmp3, tmp4)
return(my_vec)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
tmp1 <- my_median(x[1:(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[1:(3*n)/4])
tmp4 <- x[n]
my_vec <- c(tmp1, tmp2, tmp3, tmp4)
return(my_vec)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
tmp1 <- my_median(x[1:(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[n/2:n])
tmp4 <- x[n]
my_vec <- c(tmp1, tmp2, tmp3, tmp4)
return(my_vec)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
tmp1 <- my_median(x[1:(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[(n/2):n])
tmp4 <- x[n]
my_vec <- c(tmp1, tmp2, tmp3, tmp4)
return(my_vec)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
tmp0 <- x[1]
tmp1 <- my_median(x[1:(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[(n/2):n])
tmp4 <- x[n]
my_vec <- c(tmp0, tmp1, tmp2, tmp3, tmp4)
return(my_vec)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
tmp0 <- x[1]
tmp1 <- my_median(x[1:(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[((n/2)+1):n])
tmp4 <- x[n]
my_vec <- c(tmp0, tmp1, tmp2, tmp3, tmp4)
return(my_vec)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
print(n)
tmp0 <- x[1]
tmp1 <- my_median(x[1:(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[((n/2)+1):n])
tmp4 <- x[n]
my_vec <- c(tmp0, tmp1, tmp2, tmp3, tmp4)
return(my_vec)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
print(n/2)
tmp0 <- x[1]
tmp1 <- my_median(x[1:(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[((n/2)+1):n])
tmp4 <- x[n]
my_vec <- c(tmp0, tmp1, tmp2, tmp3, tmp4)
return(my_vec)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
print(round(n/2))
tmp0 <- x[1]
tmp1 <- my_median(x[1:round(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[((n/2)+1):n])
tmp4 <- x[n]
my_vec <- c(tmp0, tmp1, tmp2, tmp3, tmp4)
return(my_vec)
}
quantile(data$Id, type=1)
my_quantile(data$Id)
my_quantile(data$Id)
quantile(data$Id, type=1)
my_quantile(data$Id)
data <- read.csv("HousePrices.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
#1.a)
names(data)[names(data) == "X"] <- "Id"
#1.b)
data$LotArea<-gsub(" m2", "", data$LotArea)
data$LotArea<-as.numeric(data$LotArea)
#1.c)
data$CentralAir <- factor(data$CentralAir)
data$CentralAir <- gsub("Y","Yes",data$CentralAir)
data$CentralAir <- gsub("N","No",data$CentralAir)
table(data$CentralAir)
data <- subset(data, select = -LotShape)
#1.d)
for(name in colnames(data)){
num = length(data[name[1]][is.na(data[name[1]])])
if(num > 0){
print(paste("Column", name[1], "has", num, "of missing values"))
}
}
#Conclusion: No house has pool or the pool count wasn't measured, 159 houses don't have garage,
#            82 houses don't have basement and 1420 houses don't have fireplace
#2.a)
my_mean <- function(x){
return(sum(x)/length(x))
}
my_median <- function(x){
x <- sort(x)
n <- length(x)/2
#if length is odd need to round to get int
if(n != round(n)) return(x[round(n)])
#even number doesn't have middle point so use average of 2 middle points
return((x[n]+x[n+1])/2)
}
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
print(round(n/2))
tmp0 <- x[1]
tmp1 <- my_median(x[1:round(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[((n/2)+1):n])
tmp4 <- x[n]
my_vec <- c(tmp0, tmp1, tmp2, tmp3, tmp4)
return(my_vec)
}
mean(data$Id)
my_mean(data$Id)
median(data$Id)
my_median(data$Id)
quantile(data$Id, type=1)
my_quantile(data$Id)
data <- read.csv("HousePrices.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
#1.a)
names(data)[names(data) == "X"] <- "Id"
#1.b)
data$LotArea<-gsub(" m2", "", data$LotArea)
data$LotArea<-as.numeric(data$LotArea)
#1.c)
data$CentralAir <- factor(data$CentralAir)
data$CentralAir <- gsub("Y","Yes",data$CentralAir)
data$CentralAir <- gsub("N","No",data$CentralAir)
table(data$CentralAir)
data <- subset(data, select = -LotShape)
#1.d)
for(name in colnames(data)){
num = length(data[name[1]][is.na(data[name[1]])])
if(num > 0){
print(paste("Column", name[1], "has", num, "of missing values"))
}
}
#Conclusion: No house has pool or the pool count wasn't measured, 159 houses don't have garage,
#            82 houses don't have basement and 1420 houses don't have fireplace
#2.a)
my_mean <- function(x){
return(sum(x)/length(x))
}
my_median <- function(x){
x <- sort(x)
n <- length(x)/2
#if length is odd need to round to get int
if(n != round(n)) return(x[round(n)])
#even number doesn't have middle point so use average of 2 middle points
return((x[n]+x[n+1])/2)
}
my_quantile <- function(x){
x <- sort(x)
n <- length(x)
print(round(n/2))
tmp0 <- x[1]
tmp1 <- my_median(x[1:round(n/2)])
tmp2 <- my_median(x)
tmp3 <- my_median(x[((n/2)+1):n])
tmp4 <- x[n]
my_vec <- c(tmp0, tmp1, tmp2, tmp3, tmp4)
return(my_vec)
}
mean(data$Id)
my_mean(data$Id)
median(data$Id)
my_median(data$Id)
quantile(data$Id, type=1)
my_quantile(data$Id)
debug
