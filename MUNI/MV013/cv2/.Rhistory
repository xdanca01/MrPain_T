comp <- read.csv("Computers_cleaning.csv",sep=';',fileEncoding = "UTF-8-BOM")
comp <- read.csv("Computers.csv",sep=';',fileEncoding = "UTF-8-BOM")
setwd("/home/pdancak/school/MrPain_T/MUNI/MV013/cv2")
comp <- read.csv("Computers.csv",sep=';',fileEncoding = "UTF-8-BOM")
mean(comp$price)
help("mean")
example(mean)
mean(comp$X.price.speed.hd.ram.screen.cd.multi.premium.ads.trend)
comp$price
comp <- read.csv("Computers.csv",sep=';',fileEncoding = "UTF-8-BOM")
mean(comp$price)
View(comp)
View(comp$price)
comp <- read.csv("Computers.csv",sep=';',fileEncoding = "UTF-8-BOM")
mean(comp$price)
mean(comp$"price")
head(data)
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
data$price
dim(data)
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
dim(data)
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
dim(data)
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
dim(data)
mean(data$price)
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
data$price
mean(data$price)
mean(data$price)
View(data)
View(data)
remove(data)
remove(comp)
remove(x)
remove(xm)
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
class(data$price) <- "Numeric"
mean(data$price)
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
class(data$price) <- "Numeric"
class(data$price)
mean(data$price)
data$price<-lapply(data$price, as.numeric)
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
data[, 2]  <- as.numeric(data[, 2])
mean(data$price)
mean(data$price)
data$price <- as.numeric(data$price)
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
data$price <- as.numeric(data$price)
mean(data$price)
data$price <- as.integer(data$price)
mean(data$price)
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
data$price <- as.integer(data$price)
mean(data$price)
data$price <- as.numeric(data$price)
view(data$price)
View(data$price)
mean(data)
mean(data$price)
mean(price)
mean(data$price)
data$price <- as.numeric(data$price)
mean(data$price)
median(data$price)
median(data$price[data$price != NaN])
View(data$price[data$price != NaN])
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
View(data$price[data$price != NaN])
data$price <- as.numeric(data$price)
View(data$price[data$price != NaN])
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
data$price <- as.numeric(data$price)
median(data$price[data$price != NaN])
mean(data$price)
data$price[data$price == NaN]
data$price[data$price != NaN]
data$price[data$price != NA]
data$price[data$price != NA]
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
data$price <- as.numeric(data$price)
data$price[data$price != NA]
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
data$price <- as.numeric(data$price)
mean(data$price)
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
data$price <- as.numeric(data$price)
data$price
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
price <- data$price
price <- na.omit(price)
pruce <- as.numeric(price)
price <- gsub(',','',price)
price <- data$price
price <- gsub(',','',price)
price <- na.omit(price)
price <- as.numeric(price)
mean(data$price)
price <- as.numeric(price)
mean(price)
median(price)
mean(data$price)
help(size)
help(count)
help(count)
quantile(price, 0.5)
quantile(price, 0.3)
my_quantile(x, 0.3)
my_quantile(price, 0.3)
my_quantile() <- function(x, k){
my_sum = sum(x)
return my_sum*k
}
my_quantile() <- function(x, k){
my_sum = sum(x)
return(my_sum*k)
}
int my_quantile() <- function(x, k){
my_sum = sum(x)
return(my_sum*k)
}
my_quantile() <- function(x, k){
my_sum = sum(x)
print(my_sum*k)
return()
}
my_sum = sum(x)
my_quantile() <- function(x, k){
my_sum = sum(x)
print(my_sum*k)
return()
}
my_quantile <- function(x, k){
my_sum = sum(x)
print(my_sum*k)
return()
}
my_quantile(price, 0.3)
quantile(price, 0.3)
my_quantile <- function(x, k){
sorted_x = sort(x)
print(sorted_x[k*count(sorted_x)])
return()
}
my_quantile(price, 0.3)
count(1)
count(price)
nrow(price)
nrow(1)
print(sorted_x[k*nrow(sorted_x)])
my_quantile <- function(x, k){
sorted_x = sort(x)
print(sorted_x[k*nrow(sorted_x)])
return()
}
my_quantile(price, 0.3)
help("dim")
dim(price)
dim(price)
example(dim)
help(nrow)
example(nrow)
row
help("row")
class(price)
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
price <- data$price
price <- gsub(',','',price)
price <- na.omit(price)
price <- as.numeric(price)
mean(price)
median(price)
my_quantile <- function(x, k){
sorted_x = sort(x)
print(sorted_x[k*row(sorted_x)])
return()
}
my_quantile(price, 0.3)
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
price <- data$price
price <- gsub(',','',price)
price <- na.omit(price)
price <- as.numeric(price)
mean(price)
median(price)
my_quantile <- function(x, k){
sorted_x = sort(x)
print(sorted_x[k*nrow(sorted_x)])
return()
}
my_quantile(price, 0.3)
quantile(price, 0.3)
price.length
nrow(data)
nrow0(data)
nrow0(price)
my_quantile <- function(x, k){
sorted_x = sort(x)
print(sorted_x[k*nrow(sorted_x)])
return()
}
data <- read.csv("Computers.csv",header = TRUE ,sep=';',fileEncoding = "UTF-8-BOM")
price <- data$price
price <- gsub(',','',price)
price <- na.omit(price)
price <- as.numeric(price)
mean(price)
median(price)
my_quantile <- function(x, k){
sorted_x = sort(x)
print(sorted_x[k*length(sorted_x)])
return()
}
my_quantile(price, 0.3)
quantile(price, 0.3)
my_quantile <- function(x, k){
sorted_x = sort(x)
n <- length(sorted_x)
middle <- k*n
if(middle == round(middle))
return((sorted_x[k*n]+sorted_x[k*n+1])/2)
else
return(sorted_x[ceiling(middle)])
}
my_quantile(price, 0.3)
quantile(price, 0.3)
my_trimmed <- function(x){
top_bound <- my_quantile(x, 0.9)
low_bound <- my_quantile(x, 0.1)
n = length(x)
return(sum(x[x > low_bound & x < top_bound])/n)
}
my_trimmed(price)
my_winsored <- function(x){
top_bound <- my_quantile(x, 0.9)
low_bound <- my_quantile(x, 0.1)
n <- length(x)
x[x > top_bound] <- top_bound
x[x < low_bound] <- low_bound
return(sum(x))/n)
}
my_winsored <- function(x){
top_bound <- my_quantile(x, 0.9)
low_bound <- my_quantile(x, 0.1)
n <- length(x)
x[x > top_bound] <- top_bound
x[x < low_bound] <- low_bound
return(sum(x)/n)
}
my_trimmed(price)
my_winsored(price)
my_trimmed <- function(x){
top_bound <- my_quantile(x, 0.9)
low_bound <- my_quantile(x, 0.1)
n = length(x)
n2 = length(x[x > top_bound]) + length(x[x < low_bound])
return(sum(x[x >= low_bound & x <= top_bound])/(n-n2))
}
my_winsored <- function(x){
top_bound <- my_quantile(x, 0.9)
low_bound <- my_quantile(x, 0.1)
n <- length(x)
x[x > top_bound] <- top_bound
x[x < low_bound] <- low_bound
return(sum(x)/n)
}
my_trimmed(price)
my_winsored(price)
help(variance)
help()
variance()
my_winsored <- function(x){
top_bound <- my_quantile(x, 0.9)
low_bound <- my_quantile(x, 0.1)
n <- length(x)
x[x > top_bound] <- top_bound
x[x <= low_bound] <- low_bound
return(sum(x)/n)
}
my_trimmed <- function(x){
top_bound <- my_quantile(x, 0.9)
low_bound <- my_quantile(x, 0.1)
n = length(x)
n2 = length(x[x > top_bound]) + length(x[x <= low_bound])
return(sum(x[x >= low_bound & x <= top_bound])/(n-n2))
}
my_winsored <- function(x){
top_bound <- my_quantile(x, 0.9)
low_bound <- my_quantile(x, 0.1)
n <- length(x)
x[x > top_bound] <- top_bound
x[x <= low_bound] <- low_bound
return(sum(x)/n)
}
my_trimmed(price)
my_winsored(price)
variance <- function(x){
n <- length(x)-1
my_sum <- (x-mean(x))**2
return(1/n * my_sum)
}
my_trimmed(price)
my_winsored(price)
variance(x)
variance <- function(x){
n <- length(x)-1
my_sum <- x-mean(x)
return(1/n * my_sum)
}
variance(x)
variance <- function(x){
n <- length(x)-1
my_sum <- x-mean(x)
return(1/n * my_sum**2)
}
variance(x)
variance <- function(x){
n <- length(x)-1
print(x)
my_sum <- x-mean(x)
return(1/n * my_sum**2)
}
variance(x)
variance <- function(x){
n <- length(x)
my_sum <- sum(x)-n*mean(x)
return(1/(n-1) * my_sum**2)
}
variance(x)
my_trimmed <- function(x){
top_bound <- my_quantile(x, 0.95)
low_bound <- my_quantile(x, 0.05)
n = length(x)
n2 = length(x[x > top_bound]) + length(x[x <= low_bound])
return(sum(x[x >= low_bound & x <= top_bound])/(n-n2))
}
my_winsored <- function(x){
top_bound <- my_quantile(x, 0.95)
low_bound <- my_quantile(x, 0.05)
n <- length(x)
x[x > top_bound] <- top_bound
x[x <= low_bound] <- low_bound
return(sum(x)/n)
}
my_trimmed(price)
my_winsored(price)
mean(price, 0.05)
my_trimmed <- function(x){
top_bound <- my_quantile(x, 0.95)
low_bound <- my_quantile(x, 0.05)
n = length(x)
n2 = length(x[x > top_bound]) + length(x[x < low_bound])
return(sum(x[x > low_bound & x <= top_bound])/(n-n2))
}
my_trimmed(price)
my_trimmed(price)
mean(price, 0.05)
my_trimmed <- function(x){
top_bound <- my_quantile(x, 0.95)
low_bound <- my_quantile(x, 0.05)
n = length(x)
n2 = length(x[x > top_bound]) + length(x[x < low_bound])
return(sum(x[x > low_bound & x < top_bound])/(n-n2))
}
my_trimmed(price)
mean(price, 0.05)
my_trimmed <- function(x){
top_bound <- my_quantile(x, 0.95)
low_bound <- my_quantile(x, 0.05)
n = length(x)
n2 = length(x[x >= top_bound]) + length(x[x <= low_bound])
return(sum(x[x > low_bound & x < top_bound])/(n-n2))
}
my_trimmed(price)
mean(price, 0.05)
